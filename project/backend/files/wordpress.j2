server {
    listen 443 ssl reuseport;
    http2 on;

    status_zone wordpress;

    # indicate locations of SSL key files.
    ssl_certificate /opt/wordpress/ssl.crt;
    ssl_certificate_key /opt/wordpress/ssl.key;
    #ssl_dhparam /srv/www/master/ssl/dhparam.pem;
    server_name _;

    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score as of Sept 2015.
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';

    root /opt/wordpress/;
    index index.php;

    if (!-e $request_filename) {
        rewrite /wp-admin$ $scheme://$host$request_uri/ permanent;
        rewrite ^(/[^/]+)?(/wp-.*) $2 last;
        rewrite ^(/[^/]+)?(/.*\.php) $2 last;
    }

    location / {
        try_files $uri $uri/ /index.php?$args ;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
    }

    access_log /var/log/angie/wordpress.access.log extended;
    error_log /var/log/angie/wordpress.error.log;

    #add some rules for static content expiry-headers here
}


server {
    listen 80 reuseport;
    status_zone default;
    server_name _;

    location / {
        root /usr/share/angie/html;
        index index.html index.htm;
    }

}